/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Splash;

import ConexionDB.Conexion;
import Vista.Login;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author tboss
 */
public class SplasLoading extends javax.swing.JFrame {

    /**
     * Creates new form SplasLoading
     */
    public static ConexionDB.Conexion conexion = new Conexion();

    public SplasLoading() {
        initComponents();
        this.setResizable(true);
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        LoadingLabel = new javax.swing.JLabel();
        LoadingValue = new javax.swing.JLabel();
        LoadingBar = new javax.swing.JProgressBar();
        Backgroundgift = new javax.swing.JLabel();

        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LoadingLabel.setBackground(new java.awt.Color(255, 255, 255));
        LoadingLabel.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(LoadingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 335, 20));

        LoadingValue.setBackground(new java.awt.Color(255, 255, 255));
        LoadingValue.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(LoadingValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 500, 50, 20));

        LoadingBar.setBackground(new java.awt.Color(51, 255, 255));
        LoadingBar.setForeground(new java.awt.Color(51, 255, 255));
        jPanel1.add(LoadingBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 502, 720, 20));

        Backgroundgift.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/splaslog.gif"))); // NOI18N
        jPanel1.add(Backgroundgift, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplasLoading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplasLoading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplasLoading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplasLoading.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //Create and display the form 
        // metodo de inicio de nuestra app
        SplasLoading sp = new SplasLoading();
        // hacemos que sea visible
        sp.setVisible(true);
        Vista.Login log = new Login();
        ImageIcon icon = new ImageIcon("src/IMG/Error_Database.png");
        int x = 1;
        try {
            //hacemos u bucle for -- en el cual le indicamos que vaya aumentando de 0 a 100
            for (int i = 0; i <= 100; i++) {
                //mediante el thread le damos un tiempo estimado 
                Thread.sleep(100);
                sp.LoadingValue.setText(i + "%");
                // indicamo alguna igualaciones para que quede mas estetico
                if (i == 10) {
                    sp.LoadingLabel.setText("Turning on Modules...");
                }
                if (i == 20) {
                    sp.LoadingLabel.setText("Turning on Modules...");
                }
                if (i == 50) {
                    //cuando llegue a la mitad no comprobara la conexion con nuestra base de datos
                    sp.LoadingLabel.setText("Connection Searching !");
                    do {
                        if (Conexion.getConnection() != null) {
                            // si nuestra conexion no es un valor nullo - vacio
                            System.out.println("se establecio la conexion con la base de datos");
                            // medainte nuesta variable x que se incio en 1 --  le indicamos que al ser 2 salga del bucle
                            x = 2;
                        } else {
                            // en caso de que no salga del bucle nos indicara un error
                            int contador = 0;
                            System.out.println("Contando... " + (contador + 1));
                            sp.LoadingLabel.setText("Error Connection whit Data Base!");
                            // le enseñaremos al usuario un joption panel y el decidira si volver a conectar el internet o salir de nuestra app
                            int salida = JOptionPane.showConfirmDialog(null, "No dispone de conexion con la base de datos!!\n¿Desea salir de nuesta aplicacion?", "Connection not sucesfull", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, icon);
                            if (salida == JOptionPane.YES_OPTION) {
                                System.exit(0);
                            }
                        }
                    } while (x == 1);
                }
                if (i == 70) {
                    //c.conectar();
                    sp.LoadingLabel.setText("Connection Succesful !");
                }
                if (i == 80) {
                    sp.LoadingLabel.setText("Launching Application");
                }
                if (i == 100) {
                    // si se cumple hasta 100 se cerrara esta pantalla y se abrira la de iniciar sesion 
                    log.setVisible(true);
                    sp.dispose();
                }
                sp.LoadingBar.setValue(i);
            }
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Backgroundgift;
    private javax.swing.JProgressBar LoadingBar;
    private javax.swing.JLabel LoadingLabel;
    private javax.swing.JLabel LoadingValue;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
